{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../square/square.component\";\nfunction BoardComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Turn: \", ctx_r0.player, \"\");\n  }\n}\nfunction BoardComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Player \", ctx_r1.winner, \" Won!\");\n  }\n}\nfunction BoardComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"There is no winner.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_app_square_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-square\", 4);\n    i0.ɵɵlistener(\"click\", function BoardComponent_app_square_4_Template_app_square_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClickSquare(i_r5));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const square_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"mark\", square_r4);\n  }\n}\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    // Getter to return the current player (X or O)\n    get player() {\n      return this.isXmark ? 'O' : 'X';\n    }\n    constructor() {\n      this.isXmark = false;\n      this.noWinner = false;\n    }\n    ngOnInit() {\n      this.onNewGame();\n    }\n    // Method to start a new game\n    onNewGame() {\n      this.squares = Array(9).fill(null);\n      this.winner = null;\n      this.isXmark = false;\n      this.noWinner = false;\n    }\n    // Method to handle click event on a square\n    onClickSquare(index) {\n      if (!this.squares[index] && !this.winner) {\n        this.squares[index] = this.isXmark ? 'O' : 'X';\n        this.isXmark = !this.isXmark;\n      }\n      this.winner = this.isWinner();\n      this.noWinner = this.isNoWinner();\n    }\n    // Method to check if there is a winner\n    isWinner() {\n      let lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n      for (let i = 0; i < lines.length; i++) {\n        let [a, b, c] = lines[i];\n        if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]) {\n          return this.squares[a];\n        }\n      }\n      return null;\n    }\n    // Method to check if there is no winner\n    isNoWinner() {\n      let count = 0;\n      for (let i = 0; i < this.squares.length; i++) {\n        if (this.squares[i] !== null) {\n          count++;\n        }\n      }\n      if (count === this.squares.length) {\n        return true;\n      }\n      return false;\n    }\n  }\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)();\n  };\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [1, \"board\"], [3, \"mark\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", 3, \"click\"], [3, \"mark\", \"click\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BoardComponent_p_0_Template, 2, 1, \"p\", 0);\n        i0.ɵɵtemplate(1, BoardComponent_p_1_Template, 2, 1, \"p\", 0);\n        i0.ɵɵtemplate(2, BoardComponent_p_2_Template, 2, 0, \"p\", 0);\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, BoardComponent_app_square_4_Template, 1, 1, \"app-square\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_6_listener() {\n          return ctx.onNewGame();\n        });\n        i0.ɵɵtext(7, \"New Game\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.winner && !ctx.noWinner);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.winner);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.noWinner && !ctx.winner);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.squares);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.SquareComponent],\n    styles: [\".board[_ngcontent-%COMP%]{display:grid;grid-template-rows:100px 100px 100px;grid-template-columns:100px 100px 100px;grid-gap:2px;margin-top:20px}p[_ngcontent-%COMP%]{margin-top:30px;color:#fff}.btn[_ngcontent-%COMP%]{padding:15px;background-color:#cc8feb;color:#fff;border-radius:4px;border:none;float:right}.btn[_ngcontent-%COMP%]:hover{background-color:#be78c8}.btn[_ngcontent-%COMP%]:active{background-color:#cc8feb}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}