{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Import Angular core components\nimport { Component } from '@angular';\nlet BoardComponent = class BoardComponent {\n  // Getter to return the current player (X or O)\n  get player() {\n    return this.isXmark ? 'O' : 'X';\n  }\n  constructor() {\n    this.isXmark = false;\n    this.noWinner = false;\n  }\n  ngOnInit() {\n    this.onNewGame();\n  }\n  // Method to start a new game\n  onNewGame() {\n    this.squares = Array(9).fill(null);\n    this.winner = null;\n    this.isXmark = false;\n    this.noWinner = false;\n  }\n  // Method to handle click event on a square\n  onClickSquare(index) {\n    if (!this.squares[index] && !this.winner) {\n      this.squares[index] = this.isXmark ? 'O' : 'X';\n      this.isXmark = !this.isXmark;\n    }\n    this.winner = this.isWinner();\n    this.noWinner = this.isNoWinner();\n  }\n  // Method to check if there is a winner\n  isWinner() {\n    let lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      let [a, b, c] = lines[i];\n      if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]) {\n        return this.squares[a];\n      }\n    }\n    return null;\n  }\n  // Method to check if there is no winner\n  isNoWinner() {\n    let count = 0;\n    for (let i = 0; i < this.squares.length; i++) {\n      if (this.squares[i] !== null) {\n        count++;\n      }\n    }\n    if (count === this.squares.length) {\n      return true;\n    }\n    return false;\n  }\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})], BoardComponent);\nexport { BoardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}